/*
Convert the input prefix expression into Infix expression.
Prefix : An expression is called the prefix expression if the operator appears in the expression before the operands. Simply of the form (operator operand1 operand2).
Example : *+AB-CD
Infix : An expression is called the Infix expression if the operator appears in between the operands in the expression. Simply of the form (operand1 operator operand2).
Example : (A+B) * (C-D)

Input Format
Input a string from the user.

Constraints
Nil

Output Format
Print the infixed String.

Sample Input 0
*+AB-CD

Sample Output 0
((A+B)*(C-D))

Explanation 0
x+AB-CD is the input prefix and it's corresponding infix from is ((A+B)x(C-D)).
*/

import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner sc=new Scanner(System.in);
        String s=sc.next();
        Stack<String> st=new Stack<>();
        for(int i=s.length()-1;i>=0;i--){
            String stemp="";
            if(s.charAt(i)=='+' || s.charAt(i)=='-' || s.charAt(i)=='*' || s.charAt(i)=='/'){
                stemp='('+st.pop()+s.charAt(i)+st.pop()+')';
                st.push(stemp);
            }
            else
                st.push(""+s.charAt(i));
        }
        System.out.println(st.pop());
    }
}
